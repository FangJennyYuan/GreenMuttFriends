@using WebApplication1.Models;
@model List<AppUserDataModel>
<!doctype html>
<meta charset="utf-8">

<script src="//d3plus.org/js/d3.js"></script>
<script src="//d3plus.org/js/d3plus.js"></script>

@{
    ViewBag.Title = "Index";
}
@Scripts.Render("~/Scripts/jquery-3.4.1.js")
@Scripts.Render("~/Scripts/moment.js")
@Scripts.Render("~/Scripts/daterangepicker.js")
@Scripts.Render("~/Scripts/calendar.js")
@Scripts.Render("~/Scripts/AppUserScript.js")
@Scripts.Render("~/Scripts/NumAppInstall.js")
<h1>Impact Dashboard</h1>



<div class="row date-filter mt-3">
    <div class="col-lg-1">
        <button type="button" id="week" onclick="myWeekFunction()"> Week</button>
    </div>
    <div class="col-lg-1 mr-3">
        <button type="button" id="month" onclick="myMonthFunction()"> Month</button>
    </div>
    <div class="col-lg-1">
        <button type="button" id="all-date" onclick="getYearsDate()"> All</button>
    </div>
    <div class="col-lg-4">
        Date
        <input type="text" id="date-input" name="daterange" value="" />
    </div>
</div>


<div class="row mt-3 flexbox">
    <div class="col">
        <img src="~/Content/img/Improvement.PNG" class="mx-auto d-block img-fluid" />
    </div>

    @{
        var myAccountModel = WebApplication1.Backend.AccountBackend.Instance.GetActiveUser();
        if (myAccountModel.isAccountLoggedIn)
        {
            <div class="col-1">
                <label for="id-of-input" class="custom-checkbox favorite-graph">
                    <input type="checkbox" id="id-of-input" class="favorites" />
                    <i class="fa fa-star fa-stack-1x favorited"></i>
                    <i class="fa fa-star-o fa-stack-1x not-favorited"></i>
                </label>
            </div>
        }
        else
        {

        }
    }

    <div class="col">
        <img src="~/Content/img/AvgUsers.PNG" class="mx-auto d-block img-fluid " />
    </div>


    @{
        if (myAccountModel.isAccountLoggedIn)
        {
            <div class="col-1">
                <label for="id-of-input1" class="custom-checkbox favorite-graph">
                    <input type="checkbox" id="id-of-input1" class="favorites" />
                    <i class="fa fa-star fa-stack-1x favorited"></i>
                    <i class="fa fa-star-o fa-stack-1x not-favorited"></i>
                </label>
            </div>
        }
        else
        {

        }
    }


    <div class="col">
        <img src="~/Content/img/AvgInstalls.PNG" class="mx-auto d-block img-fluid " />
    </div>


    @{
        if (myAccountModel.isAccountLoggedIn)
        {
            <div class="col-1">
                <label for="id-of-input2" class="custom-checkbox favorite-graph">
                    <input type="checkbox" id="id-of-input2" class="favorites" />
                    <i class="fa fa-star fa-stack-1x favorited"></i>
                    <i class="fa fa-star-o fa-stack-1x not-favorited"></i>
                </label>
            </div>
        }
        else
        {

        }
    }

</div>

<div id="Graph">
    <div class="row">
        <div class="col">
            <img src="~/Content/img/WeekofMay.PNG" class="mx-auto d-block img-fluid " />
        </div>
        @{
            if (myAccountModel.isAccountLoggedIn)
            {
                <div class="col-1">
                    <label for="id-of-input3" class="custom-checkbox favorite-graph">
                        <input type="checkbox" id="id-of-input3" class="favorites" />
                        <i class="fa fa-star fa-stack-1x favorited"></i>
                        <i class="fa fa-star-o fa-stack-1x not-favorited"></i>
                    </label>
                </div>

            }
            else
            {

            }
        }
    </div>
</div>

<div class="row">
    <div class="col">
        <h2>App Users from May 19 to May 25th</h2>
    </div>
    @{
        if (myAccountModel.isAccountLoggedIn)
        {
            <div class="col-1">
                <label for="id-of-input4" class="custom-checkbox favorite-graph">
                    <input type="checkbox" id="id-of-input4" class="favorites" />
                    <i class="fa fa-star fa-stack-1x favorited"></i>
                    <i class="fa fa-star-o fa-stack-1x not-favorited"></i>
                </label>
            </div>
        }
        else
        {

        }
    }
</div>

<div id="viz"></div>

<div class="row">
    <div class="col">
        <h2>
            Number of App Installs from May 19 to May 25th
        </h2>
    </div>
    @{
        if (myAccountModel.isAccountLoggedIn)
        {
            <div class="col-1">
                <label for="id-of-input4" class="custom-checkbox favorite-graph">
                    <input type="checkbox" id="id-of-input4" class="favorites" />
                    <i class="fa fa-star fa-stack-1x favorited"></i>
                    <i class="fa fa-star-o fa-stack-1x not-favorited"></i>
                </label>
            </div>
        }
        else
        {

        }
    }
</div>
<div id="viz1"></div>

<script>

    var AppUsersdata = [


    @{
        foreach (var item in Model)
        {
            var outputString = Html.Raw("{ clinic: \"" + item.Clinic + "\", Date: \"" + item.Date.ToShortDateString() + "\", value: " + item.Value + "},");
            @outputString
        }
    }
    ]

    var attributes = [
        { "clinic": "Ijowa Clinic", "hex": "#5FBD73" },
        { "clinic": "Katsina Clinic", "hex": "#5F4892" },
        { "clinic": "Mashegu Clinic", "hex": "#71BDD3" },
        { "clinic": "Rawayau Clinic", "hex": "#1C2C8C" }
    ]

    var visualization = d3plus.viz()
        .container("#viz")
        .data({
            "value": AppUsersdata,
            "stroke": { "width": 3 }

        })
        .type("line")
        .id("clinic")         // key for which our data is unique on
        .text("clinic")       // key to use for display text
        .x({
            "value": "Date",
            "grid": { "color": "#ffffff" }
        })
        .y("value")
        .attrs(attributes)
        .color("hex")
        .font({
            "family": "'Century Gothic', Helvetica, Arial, sans-serif",
            "size": 15
        })
        .axes({
            "background": {
                "color": "#ffffff",
                "stroke": { "width": 0 }
            }
        })
        .format({
            "text": function (text, params) {
                if (text === "value") {
                    return "Total App Users";
                } else {
                    return d3plus.string.title(text, params);
                }
            }
        })
        .height(600)
        .draw()

    var visualization = d3plus.viz()
        .container("#viz1")
        .data({
            "value": NumAppInstallData,
            "stroke": { "width": 3 }

        })
        .type("line")
        .id("clinic")         // key for which our data is unique on
        .text("clinic")       // key to use for display text
        .x({
            "value": "Date",
            "grid": { "color": "#ffffff" }
        })
        .y("value")
        .attrs(attributes)
        .color("hex")
        .font({
            "family": "'Century Gothic', Helvetica, Arial, sans-serif",
            "size": 15
        })
        .axes({
            "background": {
                "color": "#ffffff",
                "stroke": { "width": 0 }
            }
        })
        .format({
            "text": function (text, params) {
                if (text === "value") {
                    return "Total Installs";
                } else {
                    return d3plus.string.title(text, params);
                }
            }
        })
        .height(600)
        .draw()


    function myWeekFunction() {
        var x = document.getElementById("Graph");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
        //populates the calendar and titles with the date class
        getWeeksDate();
    }

    function myMonthFunction() {
        $("#Graph img").attr("src", "/Content/img/MonthofMay.PNG");
        getMonthsDate();
    }
</script>